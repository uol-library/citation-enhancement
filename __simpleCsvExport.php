<?php 

/**
 * 
 * =======================================================================
 * 
 * Script to export reading list author affiliation data to a CSV file 
 * for Library staff to do further processing   
 * 
 * =======================================================================
 * 
 * Input: 
 * JSON-encoded list of citations on STDIN 
 * 
 * Output: 
 * CSV-format table of citations with affiliation data 
 * 
 * =======================================================================
 *
 * Typical usage: 
 * php simpleCsvExport.php <Data/4.json >Data/5.csv 
 * 
 * The input citation data is assumed to already contain data from Leganto, Alma, Scopus and VIAF  
 * 
 * See getCitationsByCourseAndList.php, enhanceCitationsFromAlma.php 
 * enhanceCitationsFrom Scopus.php and enhanceCitationsFromViaf.php for how this data is prepared  
 * 
 * The script also assumes a World Bank ranking file is present which has been generated by 
 * makeWorldBankRankings.php  
 * 
 * 
 * =======================================================================
 * 
 * General process: 
 * 
 * Make an empty result set to popuplate 
 * 
 * Loop over citations - for each citation:  
 *  - Assemble the relevant data from the different sources
 *  - Calculate a numeric CSI for the citation
 *  - Add the resulting record to the result set   
 *    
 * Export the result set as JSON 
 * 
 * =======================================================================
 * 
 * 
 * 
 * !! Gotchas !!  
 * 
 * The output CSV file is (like all the other data in this project) UTF-8-encoded
 * But Excel expects ANSI-encoded CSV files and will not open files as UTF-8 
 * So special characters hash in Excel 
 * This does not matter in development but 
 * TODO: We need a robust way to export UTF-8 data ina form that Excel will open 
 * e.g. use a software library to export an .xlsx file directly  
 * 
 * Different sources variously use ISO-2-letter country codes, ISO-3-letter country codes and country names 
 * During the earlier stages of the process (enhanceCitations...) we simply take the data exactly as provided 
 * During this CSV-export process we have to convert everything to a single standard format 
 * Currently we are using ISO-2-letter codes but this could change 
 * For conversion we use JSON mapping tables downloaded from http://country.io/data/ and saved in Config/CountryCodes 
 * Some sources have some records with error or placeholder codes (e.g. "XX") and some have free-text country names in 
 * other languages - currently we ignore anything we cannot recognise  
 * TODO: For a production service we may want to build config data with e.g. translations of country names from other languages
 * 
 * Some affiliation data does not contain country codes or names e.g. the 5xx fields in VIAF might contain a city or an institution 
 * We currently are not using it but 
 * TODO: in a production system we might want to look at whether we can lookup institutions and find their countries 
 *    
 *    
 * 
 * 
 * 
 */


error_reporting(E_ALL);                     // we want to know about all problems


require_once("utils.php"); 



// country codes 
$iso3Map = json_decode(file_get_contents("Config/CountryCodes/iso3.json"), TRUE);
$namesMap = json_decode(file_get_contents("Config/CountryCodes/names.json"), TRUE);
$continentMap = json_decode(file_get_contents("Config/CountryCodes/continent.json"), TRUE);
$iso2Map = array_flip($iso3Map); 
$namesToCodesMap = array_change_key_case(array_flip($namesMap));




// World Bank rankings 
$worldBankRank = Array(); 
$worldBankMaxRank = NULL; 
$worldBankRankLines = file($config["World Bank"]["RankFile"], FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
$columnNames = explode("\t", array_shift($worldBankRankLines));   
foreach ($worldBankRankLines as $worldBankRankLine) { 
    $entry = explode("\t", $worldBankRankLine);
    $entry = array_combine($columnNames, $entry); // turn numeric to text column ids
    if (isset($entry["Country Code [2]"]) && $entry["Country Code [2]"]) {
        $worldBankRank[$entry["Country Code [2]"]] = $entry["Rank"]; 
        if (!$worldBankMaxRank || $entry["Rank"]>$worldBankMaxRank) {
            $worldBankMaxRank = $entry["Rank"]; 
        }
    }
}
// World Bank country code aliases 
$worldBankAlias = json_decode(file_get_contents("Config/WorldBank/alias.json"), TRUE); 
foreach ($worldBankAlias as $source=>$target) {
    if (!isset($worldBankRank[$source])) { // only alias if we really don't have it  
        $worldBankRank[$source] = $worldBankRank[$target];
    }
} 



$citations = json_decode(file_get_contents("php://stdin"), TRUE);

$outputRecords = Array(); 
// $rowHeadings = Array("TYPE", "TITLE", "AUTHOR", "TAGS", "NATIONALITIES", "CONTINENTS", "SOURCES", "CSI", "CSI-AUTHORS", "CSI-SUM");   
$rowHeadings = Array("TYPE", "TITLE", "CONTAINER-TITLE", "AUTHOR", "TAGS", "NATIONALITIES", "SOURCES", "VIAF-SA", "VIAF-ST", "SCOPUS-SA", "SCOPUS-ST", "CSI");
// $rowHeadings = Array("TYPE", "TITLE", "CONTAINER-TITLE", "AUTHOR", "TAGS", "NATIONALITIES", "CSI");

foreach ($citations as $citation) { 
    
    $outputRecord = Array();
    
    if (!isset($citation["Leganto"])) {
        trigger_error("Cannot export data if no Leganto data in source", E_USER_ERROR);
    } 
            
    if (isset($citation["Leganto"]["secondary_type"])) { 
        $outputRecord["TYPE"] = $citation["Leganto"]["secondary_type"]["desc"];
    }
    $outputRecord["TAGS"] = Array(); 
    if (isset($citation["Leganto"]["section_tags"])) {
        foreach ($citation["Leganto"]["section_tags"] as $tag) {
            $outputRecord["TAGS"][] = $tag["desc"];
        }
    }
    if (isset($citation["Leganto"]["citation_tags"])) {
        foreach ($citation["Leganto"]["citation_tags"] as $tag) { 
            $outputRecord["TAGS"][] = $tag["desc"];
        }
    }
    if (isset($citation["Leganto"]["metadata"]["title"])) {
        $outputRecord["TITLE"] = $citation["Leganto"]["metadata"]["title"];
    } else if (isset($citation["Leganto"]["metadata"]["journal_title"])) {
        $outputRecord["TITLE"] = $citation["Leganto"]["metadata"]["journal_title"];
    }
    
    if (isset($citation["Leganto"]["metadata"]["article_title"])) {
        if (isset($outputRecord["TITLE"])) { $outputRecord["CONTAINER-TITLE"] = $outputRecord["TITLE"]; } 
        $outputRecord["TITLE"] = $citation["Leganto"]["metadata"]["article_title"];
    } else if (isset($citation["Leganto"]["metadata"]["chapter_title"])) {
        if (isset($outputRecord["TITLE"])) { $outputRecord["CONTAINER-TITLE"] = $outputRecord["TITLE"]; }
        $outputRecord["TITLE"] = $citation["Leganto"]["metadata"]["chapter_title"];
    }
    
    if (isset($citation["Leganto"]["metadata"]["author"])) {
        $outputRecord["AUTHOR"] = $citation["Leganto"]["metadata"]["author"];
    }
    
    $outputRecord["NATIONALITIES"] = Array();
    $outputRecord["CONTINENTS"] = Array();
    $outputRecord["SOURCES"] = Array();
    $outputRecord["CSI"] = "";  // default 
    $outputRecord["GNI-RANKS"] = Array();
    
    
    $gniRanks = Array();    // one value for each author - higher values for higher GNI countries 
                            // where an author has more than one affiliation entry is the mean of all the individual ranks 
                            // authors from VIAF and from Scopus count as separate authors (even though they are probably the same) 
                            // so an item with only one author and data from VIAF and from Scopus will have *two* entries 
                            // Scopus affiliation is taken from contemporary affiliation (abstract) where possible
                            // and if not from the current affiliation (profile) 
    
    
    $sources = Array(); 
    if (isset($citation["VIAF"])) { 
        
        $outputRecord["DATA"][] = "VIAF"; 
        
        if (count($citation["VIAF"])) {
            $outputRecord["VIAF-SA"] = 0; // we will sum these across all authors and then divide by number of authors after the loop 
            $outputRecord["VIAF-ST"] = 0; 
        }
        
        foreach ($citation["VIAF"] as $viafCitation) { 
            if (isset($viafCitation["best-match"]) && isset($viafCitation["best-match"]["nationalities"])) {
                
                $outputRecord["VIAF-SA"] += $viafCitation["best-match"]["similarity-author"]; 
                $outputRecord["VIAF-ST"] += $viafCitation["best-match"]["similarity-title"];
                
                $gniRanksAuthorSource = Array(); // just for this author, this source 
                
                foreach (Array("NAT"=>"nationalities") as $fieldCode=>$countryField) { 
                    
                    if (isset($viafCitation["best-match"][$countryField]) && is_array($viafCitation["best-match"][$countryField])) { 
                    
                        foreach ($viafCitation["best-match"][$countryField] as $nationality) {
                            
                            $nationalityValue = strtoupper($nationality["value"]);
                            $nationalityCode = NULL;
                            if (strlen($nationalityValue)==2) {
                                if (!in_array($nationalityValue, Array("XX", "ZZ"))) {
                                    $nationalityCode = $nationalityValue;
                                }
                            } else if (strlen($nationalityValue)==3) {
                                if (isset($iso2Map[$nationalityValue]) && $iso2Map[$nationalityValue]) {
                                    if (!in_array($iso2Map[$nationalityValue], Array("XX", "ZZ"))) {
                                        $nationalityCode = $iso2Map[$nationalityValue];
                                    }
                                }
                            }
                            if ($nationalityCode==NULL && isset($namesToCodesMap[strtolower($nationality["value"])])) {
                                // is a country name
                                $nationalityValue = strtolower($nationality["value"]);
                                if (isset($namesToCodesMap[$nationalityValue])) {
                                    $nationalityCode = $namesToCodesMap[$nationalityValue];
                                }
                            }
                            if ($nationalityCode!==NULL) {
                                $sources["VIAF-$fieldCode"] = TRUE;
                                if (isset($worldBankRank[$nationalityCode])) {
                                    $gniRanksAuthorSource[] = $worldBankRank[$nationalityCode];
                                } else {
                                    trigger_error("No World Bank ranking for ".$nationalityCode, E_USER_ERROR);
                                }
                                $outputRecord["NATIONALITIES"][] = $nationalityCode;
                            } else {
                                // trigger_error("Can't derive nation code for ".$nationality["value"], E_USER_NOTICE);
                            }
                            
                        }
                    }
                    
                }
                if (count($gniRanksAuthorSource)) { 
                    $gniRanks[] = array_sum($gniRanksAuthorSource)/count($gniRanksAuthorSource);
                }
            }
        }
        
        if (count($citation["VIAF"])) {
            $outputRecord["VIAF-SA"] = $outputRecord["VIAF-SA"]/count($citation["VIAF"]); 
            $outputRecord["VIAF-ST"] = $outputRecord["VIAF-ST"]/count($citation["VIAF"]); 
        }
        
    }
    if (isset($citation["Scopus"])) {
        
        
        if (isset($citation["Scopus"]["first-match"]) && isset($citation["Scopus"]["first-match"]["authors"])) {
        
            $outputRecord["DATA"][] = "Scopus";
            
            $outputRecord["SCOPUS-SA"] = $citation["Scopus"]["first-match"]["similarity-authors"];
            $outputRecord["SCOPUS-ST"] = $citation["Scopus"]["first-match"]["similarity-title"];
            
            foreach ($citation["Scopus"]["first-match"]["authors"] as $author) {
                
                $gniRanksAuthorSource = Array(); // just for this author, this source
                $contemporaryAffiliation = FALSE; // set to TRUE if we find one 
                
                if (isset($author["affiliation"]) && is_array($author["affiliation"])) {
                    foreach ($author["affiliation"] as $authorAffiliation) {
                        
                        $sources["Scopus-contemporary"] = TRUE;
                        
                        if (isset($authorAffiliation["country"])) {
                            if (isset($namesToCodesMap[strtolower($authorAffiliation["country"])])) {
                                $nationalityCode = $namesToCodesMap[strtolower($authorAffiliation["country"])];
                                if (isset($worldBankRank[$nationalityCode])) {
                                    $gniRanksAuthorSource[] = $worldBankRank[$nationalityCode];
                                } else {
                                    trigger_error("No World Bank ranking for ".$nationalityCode, E_USER_ERROR);
                                }
                                $outputRecord["NATIONALITIES"][] = $nationalityCode;
                                $contemporaryAffiliation = TRUE;
                            } else {
                                // trigger_error("Can't derive nation code for ".$authorAffiliation["country"], E_USER_NOTICE);
                            }
                        }
                    }
                }
                if (!$contemporaryAffiliation) { // no contemporary affiliation, try current instead 
                    if (isset($author["affiliation-current"]) && is_array($author["affiliation-current"])) {
                        foreach ($author["affiliation-current"] as $authorAffiliation) {
                            
                            $sources["Scopus-current"] = TRUE;

                            if (isset($authorAffiliation["address"])) {
                                
                                $nationalityCode = NULL;
                                if (isset($authorAffiliation["address"]["@country"])) {
                                    // 3-digit code
                                    $nationalityValue = strtoupper($authorAffiliation["address"]["@country"]); 
                                    if (isset($iso2Map[$nationalityValue]) && $iso2Map[$nationalityValue]) {
                                        if (!in_array($iso2Map[$nationalityValue], Array("XX", "ZZ"))) {
                                            $nationalityCode = $iso2Map[$nationalityValue];
                                        }
                                    }
                                }
                                if ($nationalityCode==NULL && isset($authorAffiliation["address"]["country"])) {
                                    // country name
                                    $nationalityValue = strtolower($authorAffiliation["address"]["country"]);
                                    if (isset($namesToCodesMap[$nationalityValue])) {
                                        $nationalityCode = $namesToCodesMap[$nationalityValue];
                                    }
                                }
                                if ($nationalityCode!==NULL) {
                                    if (isset($worldBankRank[$nationalityCode])) {
                                        $gniRanksAuthorSource[] = $worldBankRank[$nationalityCode];
                                    } else {
                                        trigger_error("No World Bank ranking for ".$nationalityCode, E_USER_ERROR);
                                    }
                                    $outputRecord["NATIONALITIES"][] = $nationalityCode;
                                } else {
                                    // trigger_error("Can't derive nation code for ".$authorAffiliation["address"]["@country"].":".$authorAffiliation["address"]["country"], E_USER_NOTICE);
                                }
                                
                            }
                            
                        }
                    }
                }
                if (count($gniRanksAuthorSource)) {
                    $gniRanks[] = array_sum($gniRanksAuthorSource)/count($gniRanksAuthorSource);
                }
            }
        }
    }
    
    $outputRecord["SOURCES"] = array_keys($sources);
    
    $outputRecord["NATIONALITIES"] = array_unique($outputRecord["NATIONALITIES"]);
    
    foreach ($outputRecord["NATIONALITIES"] as $nationCode) {
        if (isset($continentMap[$nationCode]) && $continentMap[$nationCode]) {
            $outputRecord["CONTINENTS"][] = $continentMap[$nationCode];
        }
    }
    $outputRecord["CONTINENTS"] = array_unique($outputRecord["CONTINENTS"]);
    
    if (count($gniRanks) && $worldBankMaxRank) {
        $outputRecord["CSI"] = array_sum($gniRanks)/($worldBankMaxRank*count($gniRanks));
        $outputRecord["GNI-RANKS"] = $gniRanks; 
    }
    
    $outputRecords[] = $outputRecord; 
    
}





$out = fopen('php://output', 'w');
fputcsv($out, $rowHeadings);
foreach ($outputRecords as $outputRecord) {
    $outputRow = Array(); 
    foreach ($rowHeadings as $rowHeading) {
        if (!isset($outputRecord[$rowHeading])) {
            $outputRow[] = "";
        } else if (is_array($outputRecord[$rowHeading])) { 
            $outputRow[] = implode("|", $outputRecord[$rowHeading]); 
        } else {
            $outputRow[] = $outputRecord[$rowHeading]; 
        }
    }
    fputcsv($out, $outputRow);
}
fclose($out);





?>